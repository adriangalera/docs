"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8099],{2603:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"Hacking/Language security/PHP","title":"PHP","description":"This article explain some security issues found in PHP.","source":"@site/docs/Hacking/Language security/PHP.md","sourceDirName":"Hacking/Language security","slug":"/languages/php","permalink":"/docs/languages/php","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"slug":"/languages/php","pagination_next":null,"pagination_prev":null},"sidebar":"tutorialSidebar"}');var i=s(4848),r=s(8453);const c={slug:"/languages/php",pagination_next:null,pagination_prev:null},a=void 0,o={},l=[{value:"Type juggling",id:"type-juggling",level:2},{value:"strcmp",id:"strcmp",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"This article explain some security issues found in PHP."}),"\n",(0,i.jsx)(n.h2,{id:"type-juggling",children:"Type juggling"}),"\n",(0,i.jsx)(n.p,{children:"Due to the nature of PHP we can abuse the type jungling feature. When comparing variables of different types, PHP will convert them to a common, comparable type."}),"\n",(0,i.jsx)(n.p,{children:"The following condition will be true and print the message."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:'$example_int = 7\n$example_str = "7"\nif ($example_int == $example_str) {\n   echo("PHP can compare ints and strings.")\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["An if with ",(0,i.jsx)(n.code,{children:"=="})," will not check the types. Only ",(0,i.jsx)(n.code,{children:"==="})," check the types."]}),"\n",(0,i.jsx)(n.p,{children:"If the string to be compared does not contain an integer, it will be converted to 0, e.g:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'("Puppies" == 0) -> True\n'})}),"\n",(0,i.jsx)(n.p,{children:"So, if you see some compraison with PHP is worth trying to exploit this vulnerability"}),"\n",(0,i.jsx)(n.p,{children:"Applying this to the security world, we can bypass auth by using this loose comparison:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:'if ($_POST["password"] == "Admin_Password") {login_as_admin();}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Then, to bypass the auth the user only need to provide ",(0,i.jsx)(n.code,{children:"0"})," integer as input:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"(0 == \u201cAdmin_Password\u201d) -> True\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Reference: ",(0,i.jsx)(n.a,{href:"https://medium.com/swlh/php-type-juggling-vulnerabilities-3e28c4ed5c09",children:"https://medium.com/swlh/php-type-juggling-vulnerabilities-3e28c4ed5c09"})]}),"\n",(0,i.jsx)(n.h2,{id:"strcmp",children:"strcmp"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"strcmp"})," method is also affected by the loose comparison."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",children:"if(strcmp($PASSWORD, $_GET['password']) == 0){\n        $success = true;\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Thanks to the type juggling describe above, if strcmp returns ",(0,i.jsx)(n.code,{children:"NULL"})," the condition will be true. We can force this by passing the password field as an array:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"http://yrmyzscnvh.abctf.xyz/web6/?password[]=%22%22\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Reference: ",(0,i.jsx)(n.a,{href:"https://www.doyler.net/security-not-included/bypassing-php-strcmp-abctf2016",children:"https://www.doyler.net/security-not-included/bypassing-php-strcmp-abctf2016"})]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>a});var t=s(6540);const i={},r=t.createContext(i);function c(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);