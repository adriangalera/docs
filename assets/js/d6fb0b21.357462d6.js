"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2640],{4043:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Hacking/HTB Academy/Introduction to Purple team","title":"Introduction to Purple team","description":"Purple team is a mix of Red team (offensive) and Blue team (defensive) security teams.","source":"@site/docs/Hacking/HTB Academy/Introduction to Purple team.md","sourceDirName":"Hacking/HTB Academy","slug":"/Hacking/HTB Academy/Introduction to Purple team","permalink":"/docs/Hacking/HTB Academy/Introduction to Purple team","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Introduction to hardware attacks","permalink":"/docs/Hacking/HTB Academy/Introduction to Hardware attacks"},"next":{"title":"Javascript deobfuscation","permalink":"/docs/Hacking/HTB Academy/Javascript deobfuscation"}}');var r=i(4848),t=i(8453);const d={},o="Introduction to Purple team",l={},c=[{value:"Windows tooling",id:"windows-tooling",level:2},{value:"Windows logging",id:"windows-logging",level:2},{value:"Dumping and analyzing Windows Memory",id:"dumping-and-analyzing-windows-memory",level:2},{value:"Linux toolings",id:"linux-toolings",level:2},{value:"Linux logging",id:"linux-logging",level:2},{value:"Dumping memory in Linux",id:"dumping-memory-in-linux",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"introduction-to-purple-team",children:"Introduction to Purple team"})}),"\n",(0,r.jsx)(n.p,{children:"Purple team is a mix of Red team (offensive) and Blue team (defensive) security teams."}),"\n",(0,r.jsx)(n.h2,{id:"windows-tooling",children:"Windows tooling"}),"\n",(0,r.jsx)(n.p,{children:"System monitoring, event logging"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Sysmon"}),(0,r.jsx)(n.td,{children:"Provides detailed event logging and detection"})]})})]}),"\n",(0,r.jsx)(n.p,{children:"Log analysis"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Eric Zimmerman Tools"}),(0,r.jsx)(n.td,{children:"Forensic utilities for analyzing digital evidence, such as registry hives and event logs."})]})})]}),"\n",(0,r.jsx)(n.p,{children:"Threat detection & Monitoring"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Yara"}),(0,r.jsx)(n.td,{children:"Signature-based file scanning tool."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Chainsaw"}),(0,r.jsx)(n.td,{children:"Command-line tool for parsing and hunting through Windows Event Logs."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Sigma"}),(0,r.jsx)(n.td,{children:"Generic signature format for SIEM rule creation."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Zircolite"}),(0,r.jsx)(n.td,{children:"Sigma-based EVTX log analysis."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Osquery"}),(0,r.jsx)(n.td,{children:"Endpoint monitoring using SQL-like queries."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Velociraptor"}),(0,r.jsx)(n.td,{children:"Endpoint monitoring, collection, and response."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Velociraptor"}),(0,r.jsx)(n.td,{children:"Endpoint monitoring, collection, and response."})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Traffic Capturing"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Wireshark"}),(0,r.jsx)(n.td,{children:"Packet capture tool for network analysis."})]})})]}),"\n",(0,r.jsx)(n.p,{children:"Memory dumping"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"DumpIt"}),(0,r.jsx)(n.td,{children:"Memory dumping utility for memory forensics."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"WinPmem"}),(0,r.jsx)(n.td,{children:"Memory dumping utility for memory forensics."})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Memory Forensics"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Volatility v2"}),(0,r.jsx)(n.td,{children:"Memory forensics tool for analyzing memory dumps."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Volatility v3"}),(0,r.jsx)(n.td,{children:"Memory forensics tool for analyzing memory dumps."})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Additional Telemetry"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"SilkETW"}),(0,r.jsx)(n.td,{children:"C# wrappers for ETW."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"SealighterTI"}),(0,r.jsx)(n.td,{children:"Running Microsoft-Windows-Threat-Intelligence without a driver."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"AMSI-Monitoring-Script"}),(0,r.jsx)(n.td,{children:"Extracting script contents using the AMSI ETW provider."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"JonMon"}),(0,r.jsx)(n.td,{children:"Collection of open-source telemetry sensors."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Fibratus"}),(0,r.jsx)(n.td,{children:"Adversary tradecraft detection using behavior-driven rule engine and YARA memory scanner."})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Adversary Simulation"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Atomic Red Team"}),(0,r.jsx)(n.td,{children:"Small and highly portable detection tests based on MITRE's ATT&CK."})]})})]}),"\n",(0,r.jsx)(n.p,{children:"Malware/Process/PE Analysis"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CFF-Explorer"}),(0,r.jsx)(n.td,{children:"Examine and edit Portable Executable (PE)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Ghidra"}),(0,r.jsx)(n.td,{children:"Reverse engineering framework"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"x64dbg"}),(0,r.jsx)(n.td,{children:"x64/x32 debugger for windows"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"SpeakEasy"}),(0,r.jsx)(n.td,{children:"Binary emulator to emulate Windows kernel and user mode malware"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"SysInternalsSuite"}),(0,r.jsx)(n.td,{children:"Sysinternals Troubleshooting Utilities"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Get-InjectedThread"}),(0,r.jsx)(n.td,{children:"Looks for threads that were created as a result of code injection."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Hollows Hunder"}),(0,r.jsx)(n.td,{children:"Scan all running processes. Recognizes and dumps a variety of implants."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Moneta"}),(0,r.jsx)(n.td,{children:"Live usermode memory analysis tool for Windows"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"PE-Sleve"}),(0,r.jsx)(n.td,{children:"Detects malware running on the system, as well as collects the potentially malicious material for further analysis."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"API-Monitor"}),(0,r.jsx)(n.td,{children:"Monitors and controls API calls made by applications and services."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"PE-Bear"}),(0,r.jsx)(n.td,{children:"Multiplatform reversing tool for PE files."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"ProcessHacker"}),(0,r.jsx)(n.td,{children:"Monitors system resources, debugs software and detects malware."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"ProcMonX"}),(0,r.jsx)(n.td,{children:"Extended Process Monitor-like tool based on Event Tracing for Windows."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Frida"}),(0,r.jsx)(n.td,{children:"Dynamic instrumentation toolkit for reverse-engineers. Helps to trace, instrument, debug and hook API functions"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"LitterBox"}),(0,r.jsx)(n.td,{children:"Malware sandbox environment for payload behavior testing."})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"windows-logging",children:"Windows logging"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Sysmon"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Sysmon (System Monitor) is a powerful system activity monitoring tool within the Microsoft Sysinternals suite. Sysmon logs can be viewed in the Event Viewer by navigating to Applications and Services Logs > Microsoft > Windows > Sysmon."}),"\n",(0,r.jsx)(n.p,{children:"Sysmon logs are stored as part of the Windows Event Log system. The logs are located on disk at the following default path:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"C:\\Windows\\System32\\winevt\\Logs\\Microsoft-Windows-Sysmon%4Operational.evtx"})}),"\n",(0,r.jsx)(n.p,{children:"Event ID 1 in sysmon logs are events for process creation."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Command Line Logging"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Command Line Logging captures information about processes and their command-line arguments, which is useful for detecting suspicious activity, such as unauthorized execution of commands. The relevant Windows event ID is 4688 (A new process has been created). These can be seen in Windows Event Log, Sysmon and JonMon."}),"\n",(0,r.jsxs)(n.p,{children:["Stored in disk in ",(0,r.jsx)(n.code,{children:"C:\\Windows\\System32\\winevt\\Logs\\Security.evtx"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"PowerShell Logging"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Script block logging captures the full content of scripts that are executed, including obfuscated or dynamically generated code. This is crucial for detecting sophisticated attacks. The Event ID for Script Block Logging is 4104. PowerShell logs can be viewed in the Event Viewer by navigating to Applications and Services Logs > Microsoft > Windows > PowerShell."}),"\n",(0,r.jsxs)(n.p,{children:["Stored in disk in ",(0,r.jsx)(n.code,{children:"C:\\Windows\\System32\\winevt\\Logs\\Microsoft-Windows-PowerShell%4Operational.evtx"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Console History"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The console history is stored in the user's profile directory at the following location:"}),"\n",(0,r.jsx)(n.p,{children:"C:\\Users%username%\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadline\\ConsoleHost_history.txt"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Audit policies"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Verbose auditing provides comprehensive tracking of both success and failure events across the system. Audit policy logs provide detailed insights into system access, privilege usage, and security settings modifications."}),"\n",(0,r.jsxs)(n.p,{children:["They are stored by default in ",(0,r.jsx)(n.code,{children:"C:\\Windows\\System32\\winevt\\Logs\\Security.evtx"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Windows Firewall Logs"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Windows Firewall logs provide detailed information about inbound and outbound network connections, including allowed and blocked connections."}),"\n",(0,r.jsxs)(n.p,{children:["Stored in ",(0,r.jsx)(n.code,{children:"C:\\Windows\\System32\\LogFiles\\Firewall\\pfirewall.log"})]}),"\n",(0,r.jsx)(n.p,{children:"here is another event (Event ID 5156) that is logged by the Windows Filtering Platform (WFP), which is responsible for processing network packets."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"JonMon"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"By combining data from both the kernel-level and user-mode components, JonMon provides users with a comprehensive view of their security activity. This is installed as a service in the host. JonMon-generated logs can be viewed in the Event Viewer by navigating to Applications and Services Logs > JonMon."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"SealighterTI"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The Microsoft-Windows-Threat-Intelligence Event Tracing for Windows (ETW) provider is a robust tool for detecting process injection and other types of attacks.  SealighterTI facilitates the logging of events from the Microsoft-Windows-Threat-Intelligence provider into the Windows Event Log, enhancing visibility into such activities. Runs in the background via a scheduled task.  Applications and Service Logs > Sealighter"}),"\n",(0,r.jsx)(n.h2,{id:"dumping-and-analyzing-windows-memory",children:"Dumping and analyzing Windows Memory"}),"\n",(0,r.jsx)(n.p,{children:"Memory dumping is a vital capability in forensic investigations, enabling the capture of the current state of a system's volatile memory for detailed post-incident analysis. This snapshot provides a wealth of information, such as active processes, loaded drivers, network connections, and potential malicious artifacts that may not be visible on disk."}),"\n",(0,r.jsxs)(n.p,{children:["We can use ",(0,r.jsx)(n.code,{children:"DumpIt"})," or ",(0,r.jsx)(n.code,{children:"WinPmem"})," to create a full memory dump."]}),"\n",(0,r.jsxs)(n.p,{children:["To analyze the memory, we'll use ",(0,r.jsx)(n.code,{children:"Volatility v2/3"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"linux-toolings",children:"Linux toolings"}),"\n",(0,r.jsx)(n.p,{children:"System monitoring and auditing"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Tool"}),(0,r.jsx)(n.th,{children:"Path"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Sysmon (Linux)"}),(0,r.jsx)(n.td,{children:"/usr/bin/sysmon"}),(0,r.jsx)(n.td,{children:"Provides detailed event logging and detection."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Auditd"}),(0,r.jsx)(n.td,{children:"/usr/sbin/auditd"}),(0,r.jsx)(n.td,{children:"Auditing tool to track system-level events."})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Threat detection and monitoring"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Tool"}),(0,r.jsx)(n.th,{children:"Path"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"YARA"}),(0,r.jsx)(n.td,{children:"/usr/local/bin/yara"}),(0,r.jsx)(n.td,{children:"Signature-based file scanning tool."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Sigma"}),(0,r.jsx)(n.td,{children:"/usr/local/bin/sigma"}),(0,r.jsx)(n.td,{children:"Generic signature format for SIEM rule creation."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Suricata"}),(0,r.jsx)(n.td,{children:"/usr/bin/suricata"}),(0,r.jsx)(n.td,{children:"Open-source IDS/IPS with network monitoring capabilities."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"osquery"}),(0,r.jsx)(n.td,{children:"/usr/bin/osqueryi"}),(0,r.jsx)(n.td,{children:"Endpoint monitoring using SQL-like queries."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Zircolite"}),(0,r.jsx)(n.td,{children:"/root/zircolite/zircolite.py"}),(0,r.jsx)(n.td,{children:"Sigma-based EVTX log analysis."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Velociraptor"}),(0,r.jsx)(n.td,{children:"/usr/local/bin/velociraptor"}),(0,r.jsx)(n.td,{children:"Endpoint monitoring, collection, and response."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"bpftrace"}),(0,r.jsx)(n.td,{children:"/usr/bin/bpftrace"}),(0,r.jsx)(n.td,{children:"High-level tracing language for Linux"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Traffic capturing: tcpdump / wireshark"}),"\n",(0,r.jsxs)(n.p,{children:["Memory extractor: LiME: ",(0,r.jsx)(n.code,{children:"/root/LiME/src/lime-5.15.0-71-generic.ko"})]}),"\n",(0,r.jsxs)(n.p,{children:["Memory dump analysis: Volatility v2: ",(0,r.jsx)(n.code,{children:"/root/volatility-master/vol.py"})]}),"\n",(0,r.jsxs)(n.p,{children:["Adversary simulation: Atomic Read team: ",(0,r.jsx)(n.code,{children:"/root/AtomicRedTeam"}),". Small and highly portable detection tests based on MITRE's ATT&CK."]}),"\n",(0,r.jsx)(n.h2,{id:"linux-logging",children:"Linux logging"}),"\n",(0,r.jsx)(n.p,{children:"Sysmon exists in Linux as well and you can see the output in syslog:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cat /var/log/syslog | /opt/sysmon/sysmonLogView\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"audit"})," is a Linux daemon that collects, processes, and records audit log events to disk."]}),"\n",(0,r.jsxs)(n.p,{children:["The logs are stored in ",(0,r.jsx)(n.code,{children:"/var/log/audit/audit.log"}),". You can use ",(0,r.jsx)(n.code,{children:"aureport"})," or ",(0,r.jsx)(n.code,{children:"ausearch"})," to analyze them efficiently:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"ausearch -k rootcmd -i\n"})}),"\n",(0,r.jsx)(n.h2,{id:"dumping-memory-in-linux",children:"Dumping memory in Linux"}),"\n",(0,r.jsx)(n.p,{children:"We'll use LiME (Linux Memory Extractor) kernel module to dump memory:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'sudo insmod lime-5.15.0-71-generic.ko "path=/tmp/dump.mem format=lime"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["To analyze the dump, one can use ",(0,r.jsx)(n.code,{children:"Volatily v2"}),". In this example, we are interested in knowing which active tasks are in the memory dump:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"python2.7 vol.py -f /tmp/dump.mem --profile=LinuxUbuntu_5_15_0-71-generic_profilex64 linux_pslist\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--profile=LinuxUbuntu_5_15_0-71-generic_profilex64"})," specifies the memory format"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"linux_pslist"})," is a volatility plugin to retrieve the list of processes in the particular dump."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>o});var s=i(6540);const r={},t=s.createContext(r);function d(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);